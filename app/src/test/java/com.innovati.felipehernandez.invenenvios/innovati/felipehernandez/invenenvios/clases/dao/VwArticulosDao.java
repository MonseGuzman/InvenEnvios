/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.innovati.felipehernandez.invenenvios.innovati.felipehernandez.invenenvios.clases.dao;

import com.innovati.felipehernandez.invenenvios.clases.dto.*;
import com.innovati.felipehernandez.invenenvios.clases.exceptions.*;
import java.sql.CallableStatement;

public interface VwArticulosDao
{
	/** 
	 * Returns all rows from the vwArticulos table that match the criteria ''.
	 */
   public VwArticulos[] findAll() throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Clave = :clave'.
	 */
   public VwArticulos[] findWhereClaveEquals(String clave) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Nombre = :nombre'.
	 */
   public VwArticulos[] findWhereNombreEquals(String nombre) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'UnidadPrimaria = :unidadPrimaria'.
	 */
   public VwArticulos[] findWhereUnidadPrimariaEquals(String unidadPrimaria) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Precio2 = :precio2'.
	 */
   public VwArticulos[] findWherePrecio2Equals(double precio2) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Precio3 = :precio3'.
	 */
   public VwArticulos[] findWherePrecio3Equals(double precio3) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Precio4 = :precio4'.
	 */
   public VwArticulos[] findWherePrecio4Equals(double precio4) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Precio5 = :precio5'.
	 */
   public VwArticulos[] findWherePrecio5Equals(double precio5) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'TipoImpuesto = :tipoImpuesto'.
	 */
   public VwArticulos[] findWhereTipoImpuestoEquals(String tipoImpuesto) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Grupo = :grupo'.
	 */
   public VwArticulos[] findWhereGrupoEquals(String grupo) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Tipo = :tipo'.
	 */
   public VwArticulos[] findWhereTipoEquals(String tipo) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Status = :status'.
	 */
   public VwArticulos[] findWhereStatusEquals(String status) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Ubicacion = :ubicacion'.
	 */
   public VwArticulos[] findWhereUbicacionEquals(String ubicacion) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Moneda = :moneda'.
	 */
   public VwArticulos[] findWhereMonedaEquals(String moneda) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'TiempoSurtido = :tiempoSurtido'.
	 */
   public VwArticulos[] findWhereTiempoSurtidoEquals(double tiempoSurtido) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Pedido = :pedido'.
	 */
   public VwArticulos[] findWherePedidoEquals(double pedido) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'CostoPromedio = :costoPromedio'.
	 */
   public VwArticulos[] findWhereCostoPromedioEquals(double costoPromedio) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'UltimoCosto = :ultimoCosto'.
	 */
   public VwArticulos[] findWhereUltimoCostoEquals(double ultimoCosto) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'CostoReposicion = :costoReposicion'.
	 */
   public VwArticulos[] findWhereCostoReposicionEquals(double costoReposicion) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'ExistenciaTotal = :existenciaTotal'.
	 */
   public VwArticulos[] findWhereExistenciaTotalEquals(double existenciaTotal) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Activo = :activo'.
	 */
   public VwArticulos[] findWhereActivoEquals(String activo) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Precio1 = :precio1'.
	 */
   public VwArticulos[] findWherePrecio1Equals(double precio1) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Clase = :clase'.
	 */
   public VwArticulos[] findWhereClaseEquals(String clase) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Cubicaje = :cubicaje'.
	 */
   public VwArticulos[] findWhereCubicajeEquals(double cubicaje) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Peso = :peso'.
	 */
   public VwArticulos[] findWherePesoEquals(double peso) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the criteria 'Equivalencia = :equivalencia'.
	 */
   public VwArticulos[] findWhereEquivalenciaEquals(double equivalencia) throws VwArticulosDaoException;

	/** 
	 * Sets the value of maxRows
	 */
   public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
   public int getMaxRows();

	/** 
	 * Returns all rows from the vwArticulos table that match the specified arbitrary SQL statement
	 */
   public VwArticulos[] findByDynamicSelect(String sql, Object[] sqlParams) throws VwArticulosDaoException;

	/** 
	 * Returns all rows from the vwArticulos table that match the specified arbitrary SQL statement
	 */
   public VwArticulos[] findByDynamicWhere(String sql, Object[] sqlParams) throws VwArticulosDaoException;

}
